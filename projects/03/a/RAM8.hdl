// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=L0, b=L1, c=L2, d=L3, e=L4, f=L5, g=L6, h=L7);
    Register(in=in, load=L0, out=R0o);
    Register(in=in, load=L1, out=R1o);
    Register(in=in, load=L2, out=R2o);
    Register(in=in, load=L3, out=R3o);
    Register(in=in, load=L4, out=R4o);
    Register(in=in, load=L5, out=R5o);
    Register(in=in, load=L6, out=R6o);
    Register(in=in, load=L7, out=R7o);
    Mux8Way16(a=R0o, b=R1o, c=R2o, d=R3o, e=R4o, f=R5o, g=R6o, h=R7o, sel=address, out=out);
}